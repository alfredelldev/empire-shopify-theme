{% for block in section.blocks %}
  {% case block.type %}
    {% when 'filter' %}
      {% comment %} CSS for filters {% endcomment %}

      {{ 'component-filters.css' | asset_url | stylesheet_tag }}

      {% capture cat_array %}{%- render 'advanced-tag-loop', block: block -%}{% endcapture %}

      {% assign cat_array = cat_array | split: '|' %}

      {% comment %} Custom tag ordering {% endcomment %}
      {%- assign custom_ordered_tags = block.settings.custom_ordered_tags | split: ',' -%}
      {%- assign custom_tags = blank -%}

      {%- for custom_ordered_tag in custom_ordered_tags -%}
        {%- assign custom_tag = custom_ordered_tag | strip -%}

        {%- unless collection.all_tags contains custom_tag -%}
          {%- continue -%}
        {%- endunless -%}

        {%- assign custom_tags = custom_tags | append: '|' | append: custom_tag -%}
      {%- endfor -%}

      {% assign sorted_tags = custom_tags | remove_first: '|' | split: '|' | concat: collection.all_tags | uniq %}

      {% liquid
        assign excluded_tags_array = block.settings.excluded_tags | split: ','
        assign excluded_groups_array = block.settings.excluded_groups | split: ','
        assign excluded_tags_temp = ''
        assign excluded_groups_temp = ''

        for excluded_tag_value in excluded_tags_array
          assign excluded_tag = excluded_tag_value | strip
          assign excluded_tags_temp = excluded_tags_temp | append: '|' | append: excluded_tag
        endfor

        for excluded_group_value in excluded_groups_array
          assign excluded_group = excluded_group_value | strip
          assign excluded_groups_temp = excluded_groups_temp | append: '|' | append: excluded_group
        endfor

        assign excluded_tags = excluded_tags_temp | remove_first: '|' | split: '|'
        assign excluded_groups = excluded_groups_temp | remove_first: '|' | split: '|'
      %}

      <div class="pills-container">
        <!-- Sort By Pill -->
        <div class="pill" id="sort-pill" onclick="togglePopup(event, 'sort-popup')">
          Sort By
          <div class="svg-wrapper">
            {% render 'icon-chevron-down' %}
          </div>
        </div>

        <!-- Filter Pills -->
        {% for cat_item in cat_array %}
          {%- if cat_item == 'searchfilter' or cat_item == blank or excluded_groups contains cat_item -%}
            {%- continue -%}
          {%- endif -%}

          <div class="pill" id="pill{{ forloop.index }}" onclick="togglePopup(event, 'popup{{ forloop.index }}')">
            {{ cat_item }}

            <div class="svg-wrapper">
              {% render 'icon-chevron-down' %}
            </div>
          </div>
        {% endfor %}
      </div>

      <!-- Sort By Popup -->
      <div class="popup sort-popup" id="sort-popup">
        <div class="popup-content">
          <ul>
            {%- for option in collection.sort_options -%}
              {% assign sort_active = false %}
              {% if collection.sort_by == blank and collection.default_sort_by == option.value %}
                {% assign sort_active = true %}
              {% elsif collection.sort_by == option.value %}
                {% assign sort_active = true %}
              {% endif %}

              <li>
                <label>
                  <input
                    type="radio"
                    name="sort"
                    value="{{ option.value }}"
                    {% if sort_active %}
                      checked
                    {% endif %}
                    onchange="updateSort(this)"
                  >
                  {{ option.name }}
                </label>
              </li>
            {%- endfor -%}
          </ul>
        </div>
      </div>

      {% for cat_item in cat_array %}
        <div class="popup" id="popup{{ forloop.index }}">
          <div class="popup-content">
            <ul>
              {% for tag in sorted_tags %}
                {%- if excluded_tags contains tag -%}
                  {%- continue -%}
                {%- endif -%}

                {% liquid
                  assign cat = tag | split: '_' | first
                  assign cat_handle = cat | handleize
                  assign tag_handle = tag | handleize
                  assign cat_item_handle = cat_item | handleize
                  assign within_group = false
                  assign active_tag_in_group = null
                %}
                {% if cat_handle != tag_handle and cat_item_handle == cat_handle %}
                  {% assign tag_count = tag_count | plus: 1 %}

                  {% comment %}
                    Loop through the currently active tags to determine if we are looping
                    through an active group. If we are, we want to remove the active tag
                    from the href since users can only select one tag per group anyway. This also
                    helps show accurate product counts.
                  {% endcomment %}
                  {% liquid
                    for current_tag in current_tags
                      assign current_cat = current_tag | split: '_' | first

                      if current_cat == cat
                        assign within_group = true
                        assign active_tag_in_group = current_tag | handleize | append: '+'
                      endif
                    endfor
                  %}

                  {%- if show_swatches -%}
                    {%- assign color_name = tag | remove_first: cat | remove_first: '_' -%}
                    {%- capture swatch -%}
                          <div
                            class="filter-item--swatch-wrapper"
                            data-swatch-tooltip="{{ color_name }}"
                          >
                            <div class="filter-item--swatch">
                              <div
                                class="filter-item--swatch-inner"
                                style="{% render 'swatch-styles', color_name: color_name %}"
                              >
                              </div>
                            </div>
                          </div>
                        {%- endcapture -%}
                  {%- endif -%}

                  {% comment %}
                    Strip out tag category prefix and add/remove link for tag filtering
                  {% endcomment %}
                  {%- capture tag_content -%}
                        {%- if show_swatches -%}
                          {{ swatch }}
                        {%- else -%}
                          {%- unless display_as_grid -%}
                            {% assign animation_state = 'unchecked' %}
                            {% if current_tags contains tag %}
                              {% assign animation_state = 'checked' %}
                            {% endif %}
                            <span class="filter-icon--checkbox" data-handle="{{ tag | handle}}">
                              {%- render 'icon-checkmark-animated', animation_state: animation_state -%}
                            </span>
                          {%- endunless -%}
                          <span class="filter-text">
                            {{ tag | remove_first: cat | remove_first: '_' }}
                          </span>
                        {%- endif -%}

                          <span
                            class="
                              filtered-product-count
                              {% if block.settings.show_filter_product_count == false %}
                                filtered-product-count--hidden
                              {% endif %}
                            "
                            data-filtered-product-count
                          ></span>
                      {%- endcapture -%}

                  {% assign filter_active = false %}
                  {%- if current_tags contains tag -%}
                    {% assign filter_active = true %}
                  {%- endif -%}

                  {% assign filter_class = 'filter-item' %}

                  {%- if tag_count > tag_limit -%}
                    {% assign filter_class = filter_class | append: ' filter-item--hidden' %}
                  {%- endif -%}

                  <li
                    class="{{ filter_class }}"
                    data-tag-advanced
                    data-group="{{ cat_item }}"
                    data-handle="{{ tag | handle }}"
                    data-tag-title="{{ tag }}"
                    data-filter-active="{{ filter_active }}"
                    {% if tag_count > tag_limit %}
                      data-hidden-default
                    {% endif %}
                    {% if current_tags contains tag %}
                      aria-current="true"
                    {% endif %}
                  >
                    {% if current_tags contains tag %}
                      {{ tag_content | link_to_remove_tag: tag }}
                    {% elsif within_group == true %}
                      {{ tag_content | link_to_add_tag: tag | remove: active_tag_in_group }}
                    {% else %}
                      {{ tag_content | link_to_add_tag: tag }}
                    {% endif %}
                  </li>
                {% endif %}
              {% endfor %}
            </ul>
          </div>
        </div>
      {% endfor %}

      <script>
        function togglePopup(event, popupId) {
          const popup = document.getElementById(popupId);
          const rect = event.target.getBoundingClientRect();

          // Position the popup below the clicked pill
          popup.style.left = `${rect.left + window.scrollX}px`;
          popup.style.top = `${rect.bottom + window.scrollY}px`;

          // Hide other popups
          document.querySelectorAll('.popup').forEach((p) => {
            if (p.id !== popupId) p.style.display = 'none';
          });

          // Toggle visibility
          popup.style.display = popup.style.display === 'block' ? 'none' : 'block';
        }

        function updateSort(select) {
          const selectedValue = select.value;
          const url = new URL(window.location.href);

          // Update or add the sort_by parameter
          url.searchParams.set('sort_by', selectedValue);

          // Redirect to the new URL
          window.location.href = url.toString();
        }

        // Close popups when clicking outside
        document.addEventListener('click', function (event) {
          if (!event.target.classList.contains('pill')) {
            document.querySelectorAll('.popup').forEach((p) => (p.style.display = 'none'));
          }
        });
      </script>
  {% endcase %}
{% endfor %}
